package ${controllerPackageName}.${moduleName};

import org.springframework.validation.annotation.Validated;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import com.xiumu.common.core.page.PageQuery;
import com.xiumu.common.core.result.ResultJSON;
import ${pojoPackageName}.${moduleName}.entity.${ClassName};
import ${pojoPackageName}.${moduleName}.dto.${ClassName}DTO;
import ${pojoPackageName}.${moduleName}.query.${ClassName}Query;
import ${servicePackageName}.service.${moduleName}.${ClassName}Service;


/**
 * ${functionName} Controller
 *
 * @author ${author}
 * @date ${datetime}
 */
@RestController
public class ${ClassName}Controller {

    @Autowired
    private ${ClassName}Service ${className}Service;


    /**
     * 分页查询
     * 可传递查询参数，按照某些字段分页查询
     *
     * @param pageQuery 分页条件，查询参数
     * @return
     */
    @GetMapping("/${businessName}/page")
    public ResultJSON page(@Validated @RequestBody PageQuery<${ClassName}Query, ${ClassName}> pageQuery) {
        return ResultJSON.success(${className}Service.listPage(pageQuery));
    }

    /**
     * 查询全部
     * 可传递查询参数，按照某些字段查询
     *
     * @param ${className} 查询条件
     * @return
     */
    @GetMapping("/${businessName}")
    public ResultJSON list(@RequestBody ${ClassName}Query ${className}) {
        return ResultJSON.success(${className}Service.listBy${ClassName}(${className}));
    }

    /**
     * 通过 ID 查询
     *
     * @param id ID
     * @return
     */
    @GetMapping("/${businessName}/{id}")
    public ResultJSON find(@PathVariable String id) {
        return ResultJSON.success(${className}Service.getById(id));
    }

    /**
     * 创建 ${functionName}
     *
     * @param ${className}DTO ${className} 信息
     * @return
     */
    @PostMapping("/${businessName}")
    public ResultJSON create(@Validated @RequestBody ${ClassName}DTO ${className}DTO) {
        return ResultJSON.success(${className}Service.create(${className}DTO));
    }

    /**
     * 更新 ${functionName}
     * 根据传递的参数更新，字段为空则不更新
     *
     * @param ${className}DTO 更新内容
     * @param id 主键 ID
     * @return
     */
    @PutMapping("/${businessName}/{id}")
    public ResultJSON update(@Validated @RequestBody ${ClassName}DTO ${className}DTO, @PathVariable String id) {
        return ResultJSON.success(${className}Service.updateById(${className}DTO, id));
    }

    /**
     * 通过 ID 逻辑删除
     *
     * @param id ID
     * @return
     */
    @DeleteMapping("/${businessName}/{id}")
    public ResultJSON delete(@PathVariable String id) {
        return ResultJSON.success(${className}Service.deleteById(id));
    }
}
